/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carelog;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Keziah Pascual
 */
public class RegisterSched extends javax.swing.JFrame {
    
    private javax.swing.JPanel panelExtraComponents;

    /**
     * Creates new form RegisterSched
     */
    public RegisterSched() {
        initComponents();
        setupTableModel();
        loadData(); // Call method to load data from the database

        // Initially disable the text fields
        txtPatientName1.setEnabled(false);
        txtPurpose1.setEnabled(false);
        btnCompleteReg.setVisible(false);
        btnCancel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctorsSched = new javax.swing.JTable();
        txtPatientName = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDoctorsSchedule = new javax.swing.JTable();
        txtPatientName1 = new javax.swing.JTextField();
        txtPurpose1 = new javax.swing.JTextField();
        btnCompleteReg = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        tblDoctorsSched.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDoctorsSched);

        txtPatientName.setText("Patient Name");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        tblDoctorsSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblDoctorsSchedule);

        txtPatientName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientName1ActionPerformed(evt);
            }
        });

        btnCompleteReg.setText("Complete Registration");
        btnCompleteReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteRegActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(txtPurpose1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(btnCompleteReg, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(txtPurpose1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCompleteReg, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
         // Check if a row is selected in the table
        int selectedRow = tblDoctorsSchedule.getSelectedRow();
        if (selectedRow != -1) {
            // Show confirmation dialog
            int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to register?", "Confirm Registration", JOptionPane.YES_NO_OPTION);

            // Handle user response
            if (result == JOptionPane.YES_OPTION) {
                // User clicked Yes, enable txtPatientName1, txtPurpose1 and show btnCompleteReg and btnCancel
                txtPatientName1.setEnabled(true);
                txtPurpose1.setEnabled(true);
                btnCompleteReg.setVisible(true);
                btnCancel.setVisible(true);
                btnRegister.setEnabled(false);
            }
        } else {
            // No row is selected, show an error or information dialog
            JOptionPane.showMessageDialog(this, "Please select a row in the table before registering.", "No Selection", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void txtPatientName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientName1ActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
         // Handle cancel
        // (Add code to handle cancellation here)
        JOptionPane.showMessageDialog(this, "Registration cancelled.");

        // Disable text fields and reset button visibility
        txtPatientName1.setEnabled(false);
        txtPurpose1.setEnabled(false);
        btnCompleteReg.setVisible(false);
        btnCancel.setVisible(false);
        btnRegister.setEnabled(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCompleteRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteRegActionPerformed
         // Check if text fields are not empty
        if (txtPatientName1.getText().trim().isEmpty() || txtPurpose1.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in both fields before completing registration.", "Incomplete Data", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Handle complete registration
        // (Add code to complete registration here)
        JOptionPane.showMessageDialog(this, "Registration completed.");

        // Disable text fields and reset button visibility
        txtPatientName1.setEnabled(false);
        txtPurpose1.setEnabled(false);
        btnCompleteReg.setVisible(false);
        btnCancel.setVisible(false);
        btnRegister.setEnabled(true);
    }//GEN-LAST:event_btnCompleteRegActionPerformed

    private void txtPatientName1KeyReleased(java.awt.event.KeyEvent evt) {
        validateFields();
    }

    private void txtPurpose1KeyReleased(java.awt.event.KeyEvent evt) {
        validateFields();
    }

    private void validateFields() {
        // Enable btnCompleteReg only if both fields have input
        boolean enableComplete = !txtPatientName1.getText().trim().isEmpty() && !txtPurpose1.getText().trim().isEmpty();
        btnCompleteReg.setEnabled(enableComplete);
    }
    
    /**
     * @param args the command line arguments
     */
    
    private void setupTableModel() {
        tblDoctorsSchedule.setModel(new DefaultTableModel(
            new Object[][]{},
            new String[]{"SchedID", "EmpName", "Specialization", "AvailDate", "Status"}
        ));
    }

    private void loadData() {
        // Database connections
        String url = "jdbc:mysql://localhost:3306/medisync_cop_finals";
        String user = "root";
        String pass = "";

        String query = "SELECT * FROM tbl_doctorsschedule";
        try (Connection con = DriverManager.getConnection(url, user, pass);
             Statement stmt = con.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            DefaultTableModel model = (DefaultTableModel) tblDoctorsSchedule.getModel();
            model.setRowCount(0); // Clear existing data

            while (rs.next()) {
                int schedID = rs.getInt("dSchedID");
                String empID = rs.getString("dEmpName");
                String specialization = rs.getString("dSpecialization");
                String availDate = rs.getString("dAvailDate");
                String status = rs.getString("dAvailStatus");

                model.addRow(new Object[]{schedID, empID, specialization, availDate, status});
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterSched.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterSched.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterSched.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterSched.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterSched().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCompleteReg;
    private javax.swing.JButton btnRegister;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDoctorsSched;
    private javax.swing.JTable tblDoctorsSchedule;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientName1;
    private javax.swing.JTextField txtPurpose1;
    // End of variables declaration//GEN-END:variables
}
